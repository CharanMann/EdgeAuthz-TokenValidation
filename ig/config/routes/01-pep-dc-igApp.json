{
  "name": "01-pep-dc-igApp",
  "baseURI": "http://igApp651.example.com:8081",
  "condition": "${matches(request.uri.path, '^/home')}",
  "heap": [
    {
      "name": "ReverseProxyHandler",
      "type": "ReverseProxyHandler"
    },
    {
      "name": "DataCenterCookie",
      "type": "ScriptableFilter",
      "config": {
        "type": "application/x-groovy",
        "source": [
          "def cookieValue = request.cookies['DataCenter']",
          "logger.info(\"Primary DC: $frConfigs.primaryDC\")",
          "logger.info(\"Secondary DC: $frConfigs.secondaryDC\")",
          "logger.info(\"DataCenter Cookie: $cookieValue\")",
          "return next.handle(context, request)"
        ]
      }
    },
    {
      "name": "AddDCHeaders",
      "type": "HeaderFilter",
      "config": {
        "messageType": "REQUEST",
        "add": {
          "DCInfo": [
            "Primary DC: ${frConfigs.primaryDC}, Secondary DC: ${frConfigs.secondaryDC}"
          ]
        }
      },
      "capture": "all"
    }
  ],
  "handler": {
    "name": "DCCheck",
    "type": "DispatchHandler",
    "capture": "all",
    "config": {
      "bindings": [
        {
          "name": "primaryDC",
          "condition": "${empty(request.cookies['DataCenter'][0]) or matches(request.cookies['DataCenter'][0].value, frConfigs.primaryDC) }",
          "capture": "all",
          "handler": {
            "name": "Chain-primaryDC",
            "type": "Chain",
            "capture": "all",
            "config": {
              "handler": "ReverseProxyHandler",
              "filters": [
                "DataCenterCookie",
                {
                  "name": "SSO-primaryDC",
                  "type": "SingleSignOnFilter",
                  "config": {
                    "amService": "AMPrimaryService",
                    "loginEndpoint": "${frConfigs.amPrimaryUrl}?realm=${frConfigs.amRealm}&service=LDAPTree&goto=${urlEncodeQueryParameterNameOrValue(contexts.router.originalUri)}"
                  }
                },
                "AddDCHeaders"
              ]
            }
          }
        },
        {
          "name": "secondaryDC",
          "condition": "${matches(request.cookies['DataCenter'][0].value, frConfigs.secondaryDC)}",
          "capture": "all",
          "handler": {
            "name": "Chain-secondaryDC",
            "type": "Chain",
            "capture": "all",
            "config": {
              "handler": "ReverseProxyHandler",
              "filters": [
                "DataCenterCookie",
                {
                  "name": "SSO-secondaryDC",
                  "type": "SingleSignOnFilter",
                  "config": {
                    "amService": "AMSecondaryService",
                    "loginEndpoint": "${frConfigs.amSecondaryUrl}?realm=${frConfigs.amRealm}&service=LDAPTree&goto=${urlEncodeQueryParameterNameOrValue(contexts.router.originalUri)}"
                  }
                },
                "AddDCHeaders"
              ]
            }
          }
        }
      ]
    }
  },
  "capture": "all"
}